name: Synthetic traffic (server + browser)

on:
  schedule:
    - cron: '15 7 * * *'      # daily at 07:15 UTC
    - cron: '*/30 * * * *'    # every 30 minutes
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps (server + browser)
        run: |
          npm i posthog-node playwright @supabase/supabase-js
          npx playwright install --with-deps chromium

      - name: Restore persona state
        uses: actions/cache@v4
        with:
          path: .synthetic_state
          key: personas-shared-v1

      # --- ENVIRONMENT VALIDATION ---
      - name: Validate environment variables
        run: |
          echo "üîç Checking required secrets..."
          if [ -z "$PH_PROJECT_API_KEY" ]; then
            echo "‚ùå Missing PH_PROJECT_API_KEY"
            exit 1
          fi
          if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
            echo "‚ùå Missing SUPABASE_SERVICE_ROLE_KEY"
            exit 1
          fi
          echo "‚úÖ All required secrets are configured"
        env:
          PH_PROJECT_API_KEY: ${{ secrets.PH_PROJECT_API_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      # --- SERVER EVENTS ---
      - name: Run synthetic server events
        run: |
          set -e
          echo "üöÄ Starting server-side synthetic traffic..."
          node scripts/synthetic-traffic.js 2>&1 | tee server_events.log
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "‚ùå Server script failed"
            cat server_events.log
            exit 1
          fi
          echo "‚úÖ Server script completed successfully"
        env:
          PH_PROJECT_API_KEY: ${{ secrets.PH_PROJECT_API_KEY }}
          PH_HOST: ${{ secrets.PH_HOST }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_URL: https://kawxtrzyllgzmmwfddil.supabase.co
          STATE_DIR: .synthetic_state
          PERSONA_POOL: 400
        continue-on-error: false

      # --- BROWSER FLOWS ---
      # New user signup journeys (creates real users)
      - name: Run new user signup journeys
        run: |
          set -e
          echo "üé≠ Starting new user signup journeys..."
          node scripts/playwright-journey-new-user.js 2>&1 | tee new_user.log
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "‚ùå New user script failed"
            cat new_user.log
            exit 1
          fi
          echo "‚úÖ New user journeys completed"
        env:
          STATE_DIR: .synthetic_state
          APP_URL: https://hogflix-demo.lovable.app
          NEW_USER_COUNT: 10
          DEBUG: false
          POSTHOG_KEY: ${{ secrets.PH_PROJECT_API_KEY }}
        continue-on-error: false
      
      # Returning user engagement sessions
      - name: Run returning user sessions
        run: |
          set -e
          echo "üîÑ Starting returning user sessions..."
          node scripts/playwright-journey-returning-user.js 2>&1 | tee returning_user.log
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "‚ùå Returning user script failed"
            cat returning_user.log
            exit 1
          fi
          echo "‚úÖ Returning user sessions completed"
        env:
          STATE_DIR: .synthetic_state
          APP_URL: https://hogflix-demo.lovable.app
          RETURNING_USER_COUNT: 30
          DEBUG: false
        continue-on-error: false
      
      # Legacy lightweight bot (optional, for quick funnel events)
      - name: Run legacy bot (quick funnel events)
        run: |
          echo "ü§ñ Running legacy bot..."
          node scripts/playwright-bot.js || echo "‚ö†Ô∏è  Legacy bot completed with warnings"
        env:
          STATE_DIR: .synthetic_state
          APP_URL: https://hogflix-demo.lovable.app
        continue-on-error: true

      # --- EVENT VERIFICATION ---
      - name: Verify PostHog events (optional)
        if: false  # Disabled until verify script is implemented
        run: node scripts/verify-posthog-events.js
        env:
          POSTHOG_PERSONAL_API_KEY: ${{ secrets.POSTHOG_PERSONAL_API_KEY }}
          POSTHOG_PROJECT_ID: your_project_id_here
        continue-on-error: true

      - name: Save persona state
        if: always()
        uses: actions/cache/save@v4
        with:
          path: .synthetic_state
          key: personas-shared-v1
